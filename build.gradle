plugins {
    id 'com.moowork.node' version '1.2.0'
}

apply plugin: 'java'
apply plugin: 'application'

mainClassName = 'fr.litarvan.slark.light.server.Main'

node {
    version = '8.7.0'
    npmVersion = '5.5.1'
    yarnVersion = '1.2.1'
    download = true
    workDir = file("${project.projectDir}/node")
    nodeModulesDir = file("${project.projectDir}/frontend")
}

group 'fr.litarvan.slark'
version '1.0.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()

    maven {
        url 'http://wytrem.github.io/maven'
    }

    maven {
        url 'http://litarvan.github.io/maven'
    }
}

sourceSets {
    generated {
        java
        resources {
            srcDir 'gen/web'
        }
    }

    main {
        compileClasspath += generated.compileClasspath + generated.output
    }
}

jar {
    from sourceSets.generated.output
}

dependencies {
    compile 'com.sparkjava:spark-core:2.6.0'
    compile 'com.google.inject:guice:4.1.0'
    compile 'com.google.guava:guava:21.0'
    compile 'commons-io:commons-io:2.5' // Delete further

    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.8.2'
    compile 'org.apache.logging.log4j:log4j-core:2.8.2'

    compile 'fr.litarvan.commons:litarvan-commons:1.0.0'
    compile sourceSets.generated.output
}

distZip {
    into(project.name) {
        from '.'
        include 'LICENSE'
        include 'LICENSE.LESSER'
    }
}

task dist {}
dist.dependsOn jar
dist.dependsOn yarn_prod
run.dependsOn yarn_prod
yarn_prod.dependsOn yarn_install

tasks.distZip.dependsOn dist
tasks.processGeneratedResources.mustRunAfter yarn_prod

run {
    if (project.getProperties().get('debug') == 'true') {
        args = ['--debug']
    }
}
